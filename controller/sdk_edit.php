<?php

/**
 * Created by PhpStorm.
 * User: manus
 * Date: 21/4/16
 * Time: 20:06
 */
class sdk_edit extends fs_controller
{
    var $project;
    public function __construct()
    {
        parent::__construct(__CLASS__, "Editar Proyecto", "SDK", false, false, false);
        $this->registrar_extension_css("editor.css");

    }

    protected function private_core()
    {
        parent::private_core(); // TODO: Change the autogenerated stub

        if($this->project = $this->load_project())
        {
            if(isset($_REQUEST['action']))
            {
                $this->template = null;
                echo json_encode($this->ajax(), JSON_PRETTY_PRINT | JSON_UNESCAPED_SLASHES);
            }
            else
            {

            }
        }
        else
        {
            $this->new_error_msg("No se encuentra este proyecto");
        }
        
    }
    public function load_project()
    {
        if(isset($_REQUEST['project']))
        {
            $file = "plugins/" . $_REQUEST['project'] . "/sdk.json";
            if(file_exists($file))
            {
                $json = json_decode(file_get_contents($file));
                $json->path = basename(dirname($file));
                $json->folder = dirname($file);
                return $json;
            }
        }

        return false;
    }

    public function ajax()
    {
        $action = $_GET['action'];

        switch ($action)
        {
            case 'list':
                return $this->action_list();
            case 'open':
                return $this->action_open();
            default:
                return array('error' => "Action not listed!");
        }
    }

    public function action_list()
    {
        $path = $this->project->folder . "/" . $_REQUEST['path'];
        $items = scandir($path);
        $list = array();
        foreach ($items as $item)
        {
            if($item != "." && $item != "..")
            {
                $filepath = $path . "/" . $item;
                $info = array();
                $info['folder'] = is_dir($filepath);
                $info['name'] = $item;
                $list[] = $info;
            }
        }
        return $list;
    }

    public function action_open()
    {
        $index = md5($_REQUEST['file']);
        $path = $this->project->folder . "/" . $_REQUEST['file'];
        $cursor = $this->project->files->{$index}->cursor;
        return array('data' => file_get_contents($path), 'cursor' => $cursor);
    }



    /**
     * Busca y registra la extensiÃ³n para colocar el css en el head y
     * devuelve true en caso de Ã©xito, false en cualquier otro caso.
     * Busca en orden inverso de prioridad.
     * @param $filename
     * @return bool
     */
    public function registrar_extension_css($filename)
    {
        $file = $this->get_css_location($filename);
        if(file_exists($file))
        {
            // Registrar la extension
            $name = preg_replace("#[^a-z0-9]#", "_", $filename);
            $fsext0 = new fs_extension(array(
                'name' => $name,
                'page_from' => $this->page->name,
                'page_to' => NULL,
                'type' => 'head',
                'text' => '<link href="' . $file .'" rel="stylesheet"></link>',
                'params' => ''
            ));
            return $fsext0->save();

        }
        return false;
    }
}